# This is a basic workflow to help you get started with Actions


env:
  region:             "us-east5-b"
  repository:         "https://github.com/Meydan52/worksample-objective-1-2.git"
  cluster_name:       "cluster-1"


name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Authenticate to GCP
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'

        
      # Get k8s credentials
      - name: Get k8s credentials
        run: |
          gcloud container clusters get-credentials "${{ env.cluster_name }}" --region  "${{ env.region }}"
          kubectl get nodes


      # Clone the repository to GCP
      - name: Clone repository to GCP
        run: git clone ${{ env.repository }}


      # Runs a set of commands using the runners shell
      - name: Get into work directory
        working-directory: "worksample-objective-1-2"
        run: ls -l

      # Runs a set of commands using the runners shell
      - name: Deploy nginx with services
        run: |
          kubectl apply -f nginx_svc.yaml --force
          kubectl get pods
          kubectl get svc

      # Runs a set of commands using the runners shell
      - name: Deploy whoami with services and ingress
        run: |
          kubectl apply -f whoami_svc_ingress.yaml --force
          kubectl get pods
          kubectl get svc
          kubectl get ingress whoami-ingress 

      # Runs a set of commands using the runners shell
      - name: Test pods
        run: |
          kubectl describe ingress whoami-ingress | grep Address: | awk '\{ print \$2 \}' > $INGRESS_IP
          curl http://${INGRESS_IP}/whoami
          